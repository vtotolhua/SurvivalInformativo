<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Iniciamos la alarma
alarm[0] = 5*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Posición a colocar el mensaje
menx = view_xview[0]+262;
meny = view_yview[0]+550;
//número de mensaje a sacar
var r;
randomize();
r = irandom_range(0, 96);
//Checamos que no sea haya usado el mensaje
    myMsg = string_copy(tablaMensajes[ r, 0], string_length(tablaMensajes[ r,0])-2, string_length(tablaMensajes[ r,0]));
    show_debug_message("myMsg " + myMsg);
        if (real(myMsg)&lt;100)
        {
//Si no se ha usado generamos un mensaje 
        dialogueBox = instance_create(menx, meny, objDialogueBox);
            with(dialogueBox) {
                maxLength = sprite_width - 10; 
                maxHeight = sprite_height - 10;
                myMessage = string_copy(tablaMensajes[ r, 0], 0,string_length(tablaMensajes[ r,0])-3);
                show_debug_message("myMessage " + myMessage);
                }
          }
//Marcamos el mensaje como usado
          tablaMensajes[ r, 0] = string_insert(uno, tablaMensajes[ r, 0], string_length(tablaMensajes[ r,0])-1);        
          myMsg1= tablaMensajes[ r, 0];  
          show_debug_message("myMsg1 " + myMsg1);
//Reiniciamos la alarma para que genere otro mensaje en 10 segundos
alarm[0] = 5*room_speed;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
